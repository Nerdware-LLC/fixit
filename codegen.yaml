######################################################################
# Config file for GraphQL Code Generator (@graphql-codegen), which
# generates TypeScript typings for GQL Schema typedefs and resolvers.
#---------------------------------------------------------------------
# Codegen Docs
# - https://graphql-code-generator.com/docs/getting-started/codegen-config
# - https://the-guild.dev/graphql/codegen/docs/config-reference/codegen-config#other-ways-to-provide-configuration
# Plugin Docs, typescript-resolvers
# - https://the-guild.dev/graphql/codegen/plugins/typescript/typescript-resolvers
######################################################################

schema: "./fixit@current.graphql"
generates:
  # Codegen output target file
  ./src/types/graphql.ts:
    plugins:
      - typescript
      - typescript-resolvers
    # Plugin configs
    config:
      useTypeImports: true
      skipTypename: true
      enumsAsTypes: true
      useIndexSignature: true
      # resolver Context type:
      contextType: "../apolloServer#ApolloServerResolverContext"
      # TODO ditch the mapped types, old non-codegen types should be internal/db-facing only
      # Map GQL types to TS types for type-resolution within resolvers:
      mappers:
        Contact: "./Contact#ContactType"
        Invoice: "./Invoice#InvoiceType"
        User: "./User#UserType"
        Profile: "./User#UserProfile"
        UserStripeConnectAccount: "./UserStripeConnectAccount#UserStripeConnectAccountType"
        UserSubscription: "./UserSubscription#UserSubscriptionType"
        WorkOrder: "./WorkOrder#WorkOrderType"
