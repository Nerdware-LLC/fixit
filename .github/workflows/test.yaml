name: Test Workflow

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize] # default PR types
    branches: [main, next]
    paths: ["src/**/*", "package*.json"]
  push:
    branches: [main, next]
    paths: ["src/**/*", "package*.json"]

jobs:
  test:
    name: Run Tests
    uses: Nerdware-LLC/reusable-action-workflows/.github/workflows/node_test.yaml@main
    with:
      node-version: "16.17.0"
      test-script: "test"
      # The node_test workflow masks these "env-vars" values and makes them
      # available as environment variables for the test script. This serves as
      # a workaround for the fact that GitHub Actions does not propagate the
      # env context to called workflows.
      env-vars: >-
        NODE_ENV=test
        VITE_PROTOCOL=http
        VITE_DOMAIN=localhost
        VITE_PORT=8080
        VITE_AWS_REGION=local
        AWS_ACCESS_KEY_ID=local
        AWS_SECRET_ACCESS_KEY=local
        VITE_DYNAMODB_TABLE_NAME=fixit-db-test
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      env-vars: >-
        VITE_JWT_PRIVATE_KEY=${{ secrets.JWT_TEST_KEY }}
        VITE_JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}
        VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_TEST_PUBLISHABLE_KEY }}
        VITE_STRIPE_SECRET_KEY=${{ secrets.STRIPE_TEST_SECRET_KEY }}
        VITE_STRIPE_WEBHOOKS_SECRET=${{ secrets.STRIPE_TEST_WEBHOOKS_SECRET }}
        VITE_FIXIT_SUB_PRODUCT_ID=${{ secrets.STRIPE_TEST_FIXIT_SUB_PRODUCT_ID }}
        VITE_FIXIT_SUB_PRICES_JSON=${{ secrets.STRIPE_TEST_FIXIT_SUB_PRICES_JSON }}
        VITE_FIXIT_SUB_PROMO_CODES_JSON=${{ secrets.STRIPE_TEST_FIXIT_SUB_PROMO_CODES_JSON }}

  update_pr:
    name: Update PR with Coverage Reports
    needs: test # only run on PRs
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read # required to checkout the code
      pull-requests: write # required to put a comment into the PR
    steps:
      - name: Download Artifact "coverage-reports"
        uses: actions/download-artifact@v3
        with:
          name: coverage-reports
      - name: Add Coverage Report to PR
        uses: davelosert/vitest-coverage-report-action@v2

  release:
    name: Release (push-only)
    needs: test # only run on push events when tests pass
    if: github.event_name == 'push' && needs.test.result == 'success'
    uses: ./.github/workflows/release.yaml
    secrets:
      SEMANTIC_RELEASE_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
